// <auto-generated />
using System;
using FitnessClubApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FitnessClubApi.Migrations
{
    [DbContext(typeof(TestContext))]
    partial class TestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FitnessClubApi.Models.Client", b =>
                {
                    b.Property<int>("Nomerabonimenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("nomerabonimenta");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Nomerabonimenta"));

                    b.Property<DateOnly?>("Dataroshdenia")
                        .HasColumnType("date")
                        .HasColumnName("dataroshdenia");

                    b.Property<string>("Fio")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("fio");

                    b.Property<DateOnly?>("Nashaloabonimenta")
                        .HasColumnType("date")
                        .HasColumnName("nashaloabonimenta");

                    b.Property<DateOnly>("Okonshanie")
                        .HasColumnType("date")
                        .HasColumnName("okonshanie");

                    b.Property<string>("Pol")
                        .HasColumnType("character varying")
                        .HasColumnName("pol");

                    b.Property<int?>("Rost")
                        .HasColumnType("integer")
                        .HasColumnName("rost");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("telephone");

                    b.Property<int?>("Ves")
                        .HasColumnType("integer")
                        .HasColumnName("ves");

                    b.Property<string>("Названиеgruppi")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("названиеgruppi");

                    b.HasKey("Nomerabonimenta")
                        .HasName("client_pkey");

                    b.HasIndex("Названиеgruppi");

                    b.ToTable("client", "FitnessClub");
                });

            modelBuilder.Entity("FitnessClubApi.Models.Gruppa", b =>
                {
                    b.Property<string>("Названиеgruppi")
                        .HasColumnType("character varying")
                        .HasColumnName("названиеgruppi");

                    b.Property<string>("Примечание")
                        .HasColumnType("character varying")
                        .HasColumnName("примечание");

                    b.HasKey("Названиеgruppi")
                        .HasName("gruppa_pkey");

                    b.ToTable("gruppa", "FitnessClub");
                });

            modelBuilder.Entity("FitnessClubApi.Models.Raspisanie", b =>
                {
                    b.Property<int>("Identificatorraspisania")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("identificatorraspisania");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Identificatorraspisania"));

                    b.Property<string>("Dennedeli")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("dennedeli");

                    b.Property<int>("Identificatortrener")
                        .HasColumnType("integer")
                        .HasColumnName("identificatortrener");

                    b.Property<DateOnly>("Nachalozanatii")
                        .HasColumnType("date")
                        .HasColumnName("nachalozanatii");

                    b.Property<int>("Prodolshitelnost")
                        .HasColumnType("integer")
                        .HasColumnName("prodolshitelnost");

                    b.Property<string>("Vidzanatii")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("vidzanatii");

                    b.Property<string>("Zal")
                        .HasColumnType("character varying")
                        .HasColumnName("zal");

                    b.Property<string>("Названиеgruppi")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("названиеgruppi");

                    b.HasKey("Identificatorraspisania")
                        .HasName("raspisanie_pkey");

                    b.HasIndex("Identificatortrener");

                    b.HasIndex("Названиеgruppi");

                    b.ToTable("raspisanie", "FitnessClub");
                });

            modelBuilder.Entity("FitnessClubApi.Models.Trener", b =>
                {
                    b.Property<int>("Identificatortrener")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("identificatortrener");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Identificatortrener"));

                    b.Property<string>("Dolshnost")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("dolshnost");

                    b.Property<string>("Fio")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("fio");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("telephone");

                    b.HasKey("Identificatortrener")
                        .HasName("trener_pkey");

                    b.ToTable("trener", "FitnessClub");
                });

            modelBuilder.Entity("FitnessClubApi.Models.Client", b =>
                {
                    b.HasOne("FitnessClubApi.Models.Gruppa", "НазваниеgruppiNavigation")
                        .WithMany("Clients")
                        .HasForeignKey("Названиеgruppi")
                        .IsRequired()
                        .HasConstraintName("client_названиеgruppi_fkey");

                    b.Navigation("НазваниеgruppiNavigation");
                });

            modelBuilder.Entity("FitnessClubApi.Models.Raspisanie", b =>
                {
                    b.HasOne("FitnessClubApi.Models.Trener", "IdentificatortrenerNavigation")
                        .WithMany("Raspisanies")
                        .HasForeignKey("Identificatortrener")
                        .IsRequired()
                        .HasConstraintName("raspisanie_identificatortrener_fkey");

                    b.HasOne("FitnessClubApi.Models.Gruppa", "НазваниеgruppiNavigation")
                        .WithMany("Raspisanies")
                        .HasForeignKey("Названиеgruppi")
                        .IsRequired()
                        .HasConstraintName("raspisanie_названиеgruppi_fkey");

                    b.Navigation("IdentificatortrenerNavigation");

                    b.Navigation("НазваниеgruppiNavigation");
                });

            modelBuilder.Entity("FitnessClubApi.Models.Gruppa", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Raspisanies");
                });

            modelBuilder.Entity("FitnessClubApi.Models.Trener", b =>
                {
                    b.Navigation("Raspisanies");
                });
#pragma warning restore 612, 618
        }
    }
}
